category: Basic
kind: filter
contents:
  - title_ja: contoso を含むレコードの検索を行ってください
    title_en: Search for records containing contoso
    query: |
      ```javascript
      search "contoso"
      ```
    description_ja: |
      search オペレーターはテーブルを指定しない場合、ワークスペース上の全てのテーブルに対して検索を行います。  
      一般的な KQL ではテーブルを指定してデータを取得しますが、目的のデータがどのテーブルに含まれているかわからない場合や、そもそもデータがワークスペースに存在するかどうかわからない場合などはsearch オペレーターを使用することができます。  
      大量のデータを検索する場合パフォーマンス上不利になるため、定期的に実行されるクエリなどでの多用は避けてください。
      また、Kusto の実行環境によっては使えません。例えば Log Analytics では使うことができますが、Azure Resource Graph では使うことができません。
    description_en: |
      The search operator performs a search on all tables in the workspace if no table is specified.  
      The search operator can be used when you do not know which table contains the data you want, or when you do not know if the data exists in the workspace in the first place.  
      It should not be used too often for queries that are executed periodically, as it has a performance disadvantage when searching large amounts of data.
      It is also not available in some Kusto execution environments. For example, it can be used in Log Analytics, but not in Azure Resource Graph.  
  - title_ja:
      contoso と retail を両方含むレコードの検索を行ってください
    title_en:
      Please search for records that contain both contoso and retail.
    query: |
      ```javascript
      // Prefered
      search "contoso" and "retail"
      
      // NOT Prefered
      // search "contoso" | search "retail"
      // search "contoso" | where Name contains "retail"
      ```
    description_ja: |
      search オペレーターは多くの結果を生成する可能性があり、パフォーマンスに影響を与えます。複数の条件を指定する必要がある場合には、１つの search オペレーターの条件に含めるようにしてください。複数の search オペレーターをパイプしたり、search オペレーターの結果を where でフィルタするような処理は、中間処理のために前の search オペレーターによって大きな結果セットが生成されます。これに対して複数の条件を指定した１つの search オペレーターはそれよりも小さな結果セットを生成します。
    description_en: |
      The search operator can generate many results, which affects performance. If multiple conditions need to be specified, they should be included in a single search operator condition. Piping multiple search operators or filtering search operator results by where will result in a large result set being generated by the previous search operator for intermediate processing. In contrast, a single search operator with multiple conditions will generate a smaller result set.
  - title_ja: 大文字から始まる Contoso を含むレコードを表示してください
    title_en: Show records containing Contoso starting with a capital letter
    query: |
      ```javascript
      search kind=case_sensitive "Contoso"
      ```
    description_ja: |
      search オペレーターは既定で大文字小文字を区別せずに検索を行いますが、kind 引数で明示的に動作を指定することができます。case_sensitive は大文字小文字を区別する指定です。
    description_en: |
      The search operator performs case-insensitive searches by default, but you can explicitly specify the behavior with the kind argument. case_sensitive is a case-sensitive specification.
  - title_ja: Perf テーブルから contosohotels を含むレコードを表示してください
    title_en: Show records containing contosohotels from the Perf table
    query: |
      ```javascript
      search in (Perf) "contosohotels"
      
      // able to search piped Table
      Perf
      | search "contosohotels"
      ```
    description_ja: |
      search  オペレーターはテーブルを指定して検索を行うことができます。in 引数の値で検索対象とするテーブルを指定します。search オペレーターはパイプから受け取ったテーブルに対して検索を行うこともできます。
    description_en: |
      The search operator can also perform searches on tables received from a pipe. The value of the "in" argument specifies the table to be searched. "search" operator can also perform searches on tables received from a pipe.
  - title_ja: SecurityEvent テーブルから contosohotels を含むレコードを表示してください
    title_en: Show records from the SecurityEvent table that contain contosohotels.
    query: |
      ```javascript
      search in (SecurityEvent) "contosohotels"
      
      // able to search piped Table
      SecurityEvent
      | search "contosohotels"
      ```
    description_ja: |
      この例は１つ前とほとんど同じです。同じ文字列を持つレコードが複数のテーブルに存在する可能性があることを理解するために用意しています。
    description_en: |
      This example is almost identical to the one before. It is provided to help you understand that records with the same string may exist in more than one table.
  - title_ja: Alert テーブルと SecurityAlert テーブルから  contosohotels を含むレコードを表示してください
    title_en: Display records from the Alert and SecurityAlert tables that contain contosohotels
    query: |
      ```javascript
      search in (Alert,SecurityAlert) "contosohotels"
      
      // Other expression
      // Need to combine multiple tables
      Alert
      | union SecurityAlert
      | search "contosohotels"
      ```
    description_ja: |
      "in" 引数では複数のテーブルを指定することができます。この例では関連しそうな情報をもつテーブルをまたいで検索を行います。追加の例は KQL では複数のテーブルをパイプラインから渡すことができないため、予め複数のテーブルを "union" で接続しています。
    description_en: |
      The "in" argument allows multiple tables to be specified. In this example, the search is performed across tables with potentially related information. An additional example is the "union" of multiple tables, since KQL does not allow multiple tables to be passed through the pipeline.
  - title_ja: <strong>[重要]ワークスペースにあるテーブルの一覧を表示してください</strong>
    title_en: <strong>[IMPORTANT] Please list the tables in your workspace</strong>.
    query: |
      ```javascript
      search *
      | distinct $table
      ```
    description_ja: |
      KQL では通常テーブルを指定して検索を行うため、ワークスペースにどのようなテーブルがあるかを知る必要があります。
      search オペレーターの検索結果には所属するテーブルを表す $table カラムが含まれるため、distinct オペレーターで一意の値を抽出することで、ワークスペースに含まれている全てのテーブルを一覧することができます。  
      
      存在するテーブルは UI から確認するのは非常に時間がかかるため、簡単にテーブル名だけを確認する方法としてこの例を挙げています。
    description_en: |
      KQL usually performs searches by specifying tables, it is necessary to know what tables are in the workspace.
      The search results of the search operator include a $table column representing the table to which it belongs, it is possible to list all tables contained in the workspace by extracting unique values with the distinct operator.
      
      It is very time consuming to check the existing tables from the UI, this example is provided as a simple way to check only the table names.
  - title_ja: AzureDiagnostics テーブルのレコードを 10 個表示してください
    title_en: Show 10 records in the AzureDiagnostics table
    query: |
      ```javascript
      AzureDiagnostics
      | take 10

      // limit and take is same 
      //AzureDiagnostics
      //| limit 10
      ```
    description_ja: |
      take オペレーターは素早くレコードの中身を確認したいときに使います。take は引数の数を上限としてレコードを取り出します。AzureDiagnostics は Azure 診断ログを保存していて非常に多くのレコードを含んでいるます。単純に AzureDiagnostics のテーブルを表示した場合、非常に長い実行時間が必要ですが take で結果を少数のレコードに絞ることですぐに結果を確認することができます。limit オペレーターも take と同じ動作をします。  
      take は毎回同じ結果が返るわけではありません。たとえば時刻順に最新のデータが取得されるわけではなく、データセットが変わらない場合でも前回実行時と結果が異なる場合があります。
    description_en: |
      AzureDiagnostics stores Azure diagnostic logs, which contain a large number of records. The limit operator works the same way as take.
      take does not always return the same result. For example, the latest data may not be taken in chronological order, and the result may differ from the previous run even if the data set remains the same.
  - title_ja: AzureDiagnostics テーブルの Category の一覧を表示してください
    title_en: List the Category in the AzureDiagnostics table
    query: |
      ```javascript
      AzureDiagnostics
      |distinct Category
      ```
    description_ja: |
      AzureDiagnostics テーブルに含まれる診断ログには複数のリソースからのログから成り立っています。一般的に数十種類のリソースのログが集約されているため、どのようなリソースのログが含まれているかを把握することが重要です。  
      Category 列にはログを生成したリソースやログの種類のヒントが含まれているため、distinct オペレーターで Category の値を一覧にすることで、目的のログの有無を判断することが容易になります。
    description_en: |
      The diagnostic logs contained in the AzureDiagnostics table consist of logs from multiple resources. Since logs from dozens of different resources are typically aggregated, it is important to understand what resources' logs are included.  
      Since the Category column contains hints about the resource that generated the log and the type of log, it is easy to determine the presence or absence of the desired log by listing the Category values in the distinguishing operator.
  - title_ja: AzureDiagnostics テーブルから ResourceType と Category の組み合わせの一覧を表示してください
    title_en: List the ResourceType and Category combinations from the AzureDiagnostics table
    query: |
      ```javascript
      AzureDiagnostics
      |distinct ResourceType,Category
      ```
    description_ja: |
      AzureDiagnostics の ResourceType にはログを生成したリソースの型が含まれるため、Category と組み合わせて distinct することで、どのリソースがどのカテゴリのログを生成しているか、わかりやすく表示することができます。
    description_en: |
      Since AzureDiagnostics' ResourceType contains the type of the resource that generated the log, it can be combined with Category and distinct to show clearly which resource is generating which category of logs.
  - title_ja: AzureDiagnostics テーブルから ApplicationGatewayAccessLog を表示してください<
    title_en: View ApplicationGatewayAccessLog from the AzureDiagnostics table<
    query: |
      ```javascript
      AzureDiagnostics
      |where Category == "ApplicationGatewayAccessLog"
      ```
    description_ja: |
      where オペレーターは与えられた条件によってレコードを選択するフィルタです。AzureDiagnostics テーブルのログは種類ごとに異なる Category 列の値を持つため、Category 列の値でフィルタすることで、目的のリソースや目的の種類のログだけを選ぶことができます。
    description_en: |
      The where operator is a filter that selects records according to given criteria; since each type of log in the AzureDiagnostics table has a different Category column value, you can filter by Category column value to select only the desired resource and desired type of log. The following table shows the number of items that can be selected.
  - title_ja: AzureDiagnostics テーブルから ApplicationGatewayAccessLog をレコードの新しい順に表示してください
    title_en: ApplicationGatewayAccessLog from the AzureDiagnostics table in order of newest to oldest record
    query: |
      ```javascript
      AzureDiagnostics
      |where Category == "ApplicationGatewayAccessLog"
      |sort by TimeGenerated desc 
      ```
    description_ja: |
      フィルタされたログはクエリの実行者が期待する順序で並んでいるとは限りません。特に時系列に従って並べられていることを期待されることが多いですが、そうでない場合が多くあります。  
      sort オペレーターは指定した列の値によってレコードをソートします。既定では降順でソートを行います。この例では desc 引数を指定して明示的に降順に並び変えていますが、省略することもできます。
    description_en: |
      Filtered logs are not always arranged in the order expected by the query executor. In particular, they are often expected to be arranged according to chronological order, but this is often not the case.
      The sort operator sorts records by the specified column values. By default, it sorts in descending order. In this example, the desc argument is specified to explicitly sort in descending order, but it can be omitted.
  - title_ja: AzureDiagnostics テーブルから ApplicationGatewayAccessLog をレコードの古い順に表示してください
    title_en: Display ApplicationGatewayAccessLog from AzureDiagnostics table in order of oldest to newest record
    query: |
      ```javascript
      AzureDiagnostics
      |where Category == "ApplicationGatewayAccessLog"
      |sort by TimeGenerated asc 
      ```
    description_ja: |
      sort オペレーターで昇順にソートする場合には asc 引数を指定します。
    description_en: |
      To sort in ascending order with the sort operator, specify the asc argument.
  - title_ja: AzureDiagnostics テーブルのから ApplicationGatewayAccessLog をレコードの新しい順に 10 件表示してください
    title_en: Display the ApplicationGatewayAccessLog from the AzureDiagnostics table, sorted by most recent record (10)
    query: |
      ```javascript
      AzureDiagnostics
      |where Category == "ApplicationGatewayAccessLog"
      |top 10 by TimeGenerated desc 
      ```
    description_ja: |
      ソートされた結果からいくつかのレコードを取り出したい場合には top オペレーターを使用します。top は by 引数に指定された列の値でレコードをソートします。sort と同じく既定では降順にソートを行い、この例では明示的に desc を指定しています。  
    description_en: |
      The top operator is used to sort records by the column value specified in the by argument. top, like sort, sorts records in descending order by default, and in this example, desc is specified explicitly.

  - title_ja: AzureDiagnostics テーブルのから ApplicationGatewayAccessLog をレコードの古い順に 10 件表示してください
    title_en: Display the ApplicationGatewayAccessLog from the AzureDiagnostics table in order of oldest to newest record (10)
    query: |
      ```javascript
      AzureDiagnostics
      |where Category == "ApplicationGatewayAccessLog"
      |top 10 by TimeGenerated asc 
      ```
    description_ja: |
      top オペレーターも sort と同様に asc 引数で昇順のソートを行うことができます。
    description_en: |
      The top operator, like sort, can also perform ascending sorting with an asc argument.
  - title_ja: AzureMetrics テーブルのレコードを 10 個表示してください
    title_en: Display 10 records in the AzureMetrics table
    query: |
      ```javascript
      AzureMetrics
      | take 10
      ```
    description_ja: |
      AzureMetrics テーブルは Azure リソースのメトリックを保持するテーブルです。リソースの診断設定でメトリックを有効にした場合、このテーブルに情報が保存されます。
      Metric は Windows でいうところのパフォーマンス カウンターのようなもので、リソースの数値的な側面を計測するために利用します。
    description_en: |
      The AzureMetrics table is a table that holds metrics for Azure resources. If metrics are enabled in the diagnostic settings for a resource, information is stored in this table.
      Metrics are like performance counters in Windows and are used to measure numerical aspects of a resource.
  - title_ja: AzureMetrics テーブルの MetricName の一覧を表示してください
    title_en: List the MetricName in the AzureMetrics table
    query: |
      ```javascript
      AzureMetrics
      | distinct MetricName
      ```
    description_ja: |
      AzureMetrics テーブルには様々なリソースからメトリックが送られます。各メトリックは MetricName というフィールドを持ち、あるレコードがどのメトリックのデータであるかを見分けることができます。
    description_en: |
      The AzureMetrics table receives metrics from various resources. Each metric has a field called MetricName that identifies which metric a given record is data for.
  - title_ja: AzureMetrics テーブルの ResourceProvider と MetricName の組み合わせの一覧を表示してください
    title_en: List the ResourceProvider and MetricName combinations in the AzureMetrics table
    query: |
      ```javascript
      AzureMetrics
      | distinct ResourceProvider,MetricName
      ```
    description_ja: |
      メトリックの種類はかなり多いので、一覧する際には生成元となっているリソース プロバイダーの情報も利用すると見やすくなります。
      distinct オペレーターで ResourceProvider と MetricName の一意な組み合わせを表示すると、各リソースプロバイダ―が生成するメトリックを整理することができます。
    description_en: |
      Since there are quite a few different types of metrics, it is helpful to use the information of the resource provider from which they are generated when listing them.
      Viewing unique combinations of ResourceProvider and MetricName in the distinct operator allows you to organize the metrics generated by each resource provider.
  - title_ja: AzureMetrics テーブルから Percentage CPU メトリックだけを表示してください
    title_en: Display only the Percentage CPU metric from the AzureMetrics table
    query: |
      ```javascript
        AzureMetrics
        | where MetricName == "Percentage CPU"
      ```
    description_ja: |
      特定のメトリックを表示するためには where オペレーターで任意の MetricName を指定します。
    description_en: |
      To display a specific metric, specify any MetricName in the where operator.
  - title_ja: AzureMetrics テーブルからコンピューター CH1-SQLVM12 の Percentage CPU を表示してください
    title_en: Display the Percentage CPU of computer CH1-SQLVM12 from the AzureMetrics table
    query: |
      ```javascript
      AzureMetrics
      | where Resource == "CH1-SQLVM12" and MetricName == "Percentage CPU"
      ```
    description_ja: |
      where オペレーターは複数の条件でレコードをフィルタすることができます。リソース名とメトリックを使用することで、特定のリソースの任意のメトリックだけを表示することができます。
    description_en: |
      The where operator can filter records by multiple criteria. Resource name and metric can be used to display only any metric for a specific resource.
  - title_ja: AzureActivity テーブルのレコードを 10 個表示してください
    title_en: Show 10 records in the AzureActivity table
    query: |
      ```javascript
      AzureActivity
      | take 10
      ```
    description_ja: |
      この例はデモ ワークスペースでは動作しないかもしれませんので、お手持ちの Log Analytics ワークスペースでお試しください。
      [参考：Log Analytics ワークスペースに送信する]Log Analytics ワークスペースに送信する(https://docs.microsoft.com/azure/azure-monitor/essentials/activity-log#send-to-log-analytics-workspace)
      AzureActivity テーブルはリソースの変更や仮想マシンの起動といった、サブスクリプションに対する操作が記録されます。
      変更作業の確認や、不必要なリソースに変更が行われていないかなどを調べることができます。
    description_en: |
      This example may not work in the demo workspace, so please try it in your Log Analytics workspace.
      [Ref:Send to Log Analytics workspace] Send to Log Analytics workspace (https://docs.microsoft.com/azure/azure-monitor/essentials/activity-log#send-to-log-analytics-) workspace)
      The AzureActivity table records operations on subscriptions, such as changing resources or starting virtual machines.
      You can check the change work and see if any changes have been made to unnecessary resources.
  - title_ja: AzureActivity テーブルで ResourceProviderValue と _ResourceId と OperationNameValue の組み合わせの一覧を表示してください
    title_en: List the resources and operations that have been operated on in the AzureActivity table
    query: |
      ```javascript
      AzureActivity
      | distinct ResourceProviderValue,_ResourceId, OperationNameValue
      ```
    description_ja: |
      _ResourceId はリソースの一意の識別子、ResourceProviderValue はリソース プロバイダーを表します。このクエリにより、各リソースにどのような操作が行われたかをプロバイダごとに整理して表示することができます。
    description_en: |
      _ResourceId is the unique identifier of the resource and ResourceProviderValue represents the resource provider. This query allows you to see what operations have been performed on each resource, organized by provider.
  - title_ja: AzureActivity テーブルから操作を行ったユーザーとIP アドレスの一覧を表示する
    title_en: Display a list of users and IP addresses that have performed operations from the AzureActivity table
    query: |
      ```javascript
        AzureActivity
        | distinct Caller,CallerIpAddress
      ```
    description_ja: |
      Caller は実行を行ったユーザー、CallerIpAddress はその際の操作元の IP アドレスです。意図しないユーザーや場所からの操作がないかどうかの確認に使うことができます。
    description_en: |
      Caller is the user who performed the execution, and CallerIpAddress is the IP address of the source of the operation. This can be used to check for operations from unintended users or locations.
  - title_ja: AzureActivity テーブルで Administrative カテゴリの操作を行ったユーザーの一覧
    title_en: List of users who have performed operations in the Administrative category in the AzureActivity table
    query: |
      ```javascript
      AzureActivity
      | where CategoryValue == "Administrative"   
      | distinct Caller
      ```
    description_ja: |
      管理作業は CategoryValue に Administrative という値を含みます。
    description_en: |
      Administrative work includes the value Administrative in CategoryValue.
  - title_ja: AzureActivity テーブルから管理作業に失敗したユーザーと IP アドレス、その操作対象となったリソースの一覧を表示してください
    title_en: List the users whose administrative tasks failed from the AzureActivity table and the resources on which they operated
    query: |
      ```javascript
      AzureActivity
      | where ActivityStatusValue == "Failure" and CategoryValue == "Administrative"
      | distinct Caller,CallerIpAddress, _ResourceId
      ```
    description_ja: |
      操作が失敗したエントリは ActivityStatusValue が Failure になります。このクエリにより管理業務を試みて失敗したユーザーを表示することができます。
      失敗の理由は様々ですが、例えば CallerIpAddress が普段と異なる場合にはセキュリティ侵害を示唆している可能性があります。
    description_en: |
      An entry whose operation failed will have an ActivityStatusValue of Failure. This query allows you to view users who have attempted and failed administrative tasks.
      Reasons for failure vary, but for example, an unusual CallerIpAddress may indicate a security breach.